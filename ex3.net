using System;
namespace LoopTasks
{
    public static class LoopTasks
    {
        /// Task 1

        public static int SumOfOddDigits(int n)
        {
            //this method should return the sum of the odd digits of n.
            // TODO: delete code line below, write down your solution 

            int count = 0;

            while (n > 0)
            {
                count += n & 1; // If the least significant bit is set (i.e., 1), increment the count
                n >>= 1; // Right shift n by 1 to check the next bit
            }
            return count;
        }
        /// Task 2

        public static int NumberOfUnitsInBinaryRecord(int n)
        {
            //this method should return the number of units in the binary notation of n.
            // TODO: delete code line below, write down your solution 

            int count = 0;

            while (n > 0)
            {
                count += n & 1; // If the least significant bit is set (i.e., 1), increment the count
                n >>= 1; // Right shift n by 1 to check the next bit
            }
            return count;
        }
       

 /// Task 3 
        public static int SumOfFirstNFibonacciNumbers(int n)
        {
            //this method should return the sum of the first n Fibonacci numbers.
            // TODO: delete code line below, write down your solution 
            if (n <= 0)
            {
                throw new ArgumentException("n must be a positive integer.");
            }
            if (n == 1)
            {
                return 0; // The first Fibonacci number is 0
            }
            int firstFibonacci = 0;
            int secondFibonacci = 1;
            int sum = firstFibonacci + secondFibonacci;
            for (int i = 3; i <= n; i++)
            {
                int nextFibonacci = firstFibonacci + secondFibonacci;
                sum += nextFibonacci;
                firstFibonacci = secondFibonacci;
                secondFibonacci = nextFibonacci;
            }
           return sum;
        }
    }
}
